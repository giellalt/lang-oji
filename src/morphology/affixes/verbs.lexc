!todo: 
    !VII, VTI (all). 
    !VTA 
    !   conjunct, imperative
    !   write up description of how theme-sign, number, peripheral slots are interacting
    !VAI fine tuning, de-nasalize conjunct order.

!! Verb inflection
!! ---------------
!! The UNDEFINED language verbs inflect in persons.

! generated template: person-number, number in lower case
! generated root.lexc: number-person, number in camel case
!generated assumes zero conversion?
!#:0   Nouns   ;

!#####
!#Bibliography info
!#####

!Not yet entered

!#####
!#Commence work
!#####

!Need to make sure features match between yaml and here

!does all verbal inflection need to be in this file, or can I split it up a bit?

!Continuation lexicon after PREFIXES is in ../stems/
!This almost certainly is going to be revised
!../stems/verbs.lexc will have internal divisions
!furthermore, why shouldn't person prefixes be common between nouns and verbs?

!#####
!#Prefixes
!#####

LEXICON V_PREFIXES
1+:ni   V_FIRST_PERSON_SET ;
2+:gi   V_SECOND_PERSON_SET ;
3+:o    V_THIRD_PERSON_SET ;
        VERBS ; 
!Add alignment recs to style

!style question: PERSON spelled out here and in flags
!but some sublexicon titles have PERS

!_FLAG -> _SET
LEXICON V_FIRST_PERSON_SET !add _SET to style
@P.Person.1@  VERBS ;

LEXICON V_SECOND_PERSON_SET 
@P.Person.2@  VERBS ;

LEXICON V_THIRD_PERSON_SET 
@P.Person.3@  VERBS ;

!#####
!#VAI Morphological sub-classes
!#####

!looking like gateway but not labeled as such, stems will have to be edited too

LEXICON VAI_ORDERS 
@D.Person.3@  VAI_INDEP_NEG ; !no 3 pre for vai indep
@D.Person@    VAI_NON_INDEP ;

LEXICON VAI_NON_INDEP 
+Cnj:0     VAI_CNJ_NEG ;
+Imp:0    VAI_IMPER ;

!#####
!#VAI Independent suffixes
!#####

!negative slot

LEXICON VAI_INDEP_NEG 
+Neg:sii    VAI_INDEP_PERSNUM_GET ;
            VAI_INDEP_PERSNUM_GET ;!intended ... no suffix, just go to persnum

!number slot
LEXICON VAI_INDEP_PERSNUM_GET 
!<"+"[1|2]Sg>       VAI_INDEP_MOOD ; !Good move? do we want to specify the interpretation of null morphs?
@R.Person.2@  VAI_INDEP_LOCALNUM ;
@R.Person.1@  VAI_INDEP_LOCALNUM ;
@D.Person@      VAI_INDEP_NONLOCAL ;

LEXICON VAI_INDEP_NONLOCAL 
+3:w        VAI_INDEP_THIRD_PERSON_FLAG ;
@D.Passive@ VAI_INDEP_X ;
!only one value of passive is possible (Dec 2015)

LEXICON VAI_INDEP_X
+X:m        VAI_INDEP_THIRD_PERSON_FLAG ;

LEXICON VAI_INDEP_THIRD_PERSON_FLAG 
@P.Person.3@  VAI_INDEP_MOOD ;

LEXICON VAI_INDEP_LOCALNUM !style on linearizing nested sublexica? does this count as a gateway?
<["+1Pl"|"+21"] .x. [m i n]>   VAI_INDEP_MOOD ; !Good move? do we want to specify a particular value or let the combination of prefix and suffix do the work?
@R.Person.2@          VAI_INDEP_LOCALNUM_2PL ;
            VAI_INDEP_MOOD ; !just go to mood, note that failure to pick up suffix in slot not managed in GET

LEXICON VAI_INDEP_LOCALNUM_2PL 
+2Pl:mw   VAI_INDEP_MOOD ;!UR = mw (surfaces prevocalically)


!mood slot
LEXICON VAI_INDEP_MOOD 
+Prt:ban       VAI_INDEP_PERS_GET ;
+Dub:dig        VAI_INDEP_PERS_GET ; 
+Prt+Dub:goban VAI_INDEP_PERS_GET ;
                VAI_INDEP_PERS_GET ; !intended ... no suffix, just go to gateway

!non-local number slot
LEXICON VAI_INDEP_PERS_GET !add GET to style
@D.Person.3@  # ; !should ending be an option earlier? we currently have two sublexica that can be exited with epsilon transitions before this ending
@R.Person.3@  VAI_INDEP_NONLOCNUM ;

LEXICON VAI_INDEP_NONLOCNUM 
+3Obv:an    # ;
+3Pl:ag     # ;
            # ;

!#####
!#VAI Conjunct suffixes
!#####

!Conjunct order
!See Valentine  2001:222, 236-237
!assuming nasal final stems to avoid all hiatus repairs
!ibid 236-237 lacks nasal-final examples

!Insert schematic template here (also update style guide)

!negative slot
LEXICON VAI_CNJ_NEG 
+Neg:ziw        VAI_CNJ_PERSNUM ; !nas morph
!is this next legal? will it make incorrect zigwaawaad or ziwaad?
+Neg+3Pl:zigwaa VAI_CNJ_PERSNUM ; !nas morph, neg 3pl diff from pos 3pl
                VAI_CNJ_PERSNUM ;

!need to be able to adjust the [w]

!person and number slot
LEXICON VAI_CNJ_PERSNUM 
!adjustments for context needed once move past nas
+1Sg:aanh      VAI_CNJ_PRET ; 
+2Sg:in        VAI_CNJ_PRET ; 
+3Sg:g         VAI_CNJ_PRET ; !nas morph
+1Pl:aang      VAI_CNJ_PRET ;
+2Pl:ing       VAI_CNJ_PRET ;
+21:eg         VAI_CNJ_PRET ;
+3Pl:waad      VAI_CNJ_PRET ;
+3Obv:inid     VAI_CNJ_PRET ; !nas morph
+X:ang         VAI_CNJ_PRET ; !nas morph

!need to be able to end or move on ...
!doesn't seem right to delay decision to end until the next sublexicon

!preterite slot
LEXICON VAI_CNJ_PRET 
+Prt:ban   VAI_CNJ_DUB ;
            VAI_CNJ_DUB ;

!dubitative slot
LEXICON VAI_CNJ_DUB 
+Dub:en # ;
        # ;

!#####
!#VAI Imperative suffixes
!#####
!Insert schematic template here (also update style guide)

!just one slot under our analysis
LEXICON VAI_IMPER 
+Imm+2Sg:n       # ;
+Imm+2Pl:g       # ;
+Imm+21:daa      # ;
+Del+2Sg:kan     # ;
+Del+2Pl:kag     # ;
+Proh+2Sg:ken    # ;
+Proh+2Pl:kegon  # ;
+Proh+21:siidaa  # ;

!#####
!# VII Morphological sub-classes
!#####

!LEXICON VII_ORDERS 
!+Cnj ;
!+Imp ;

!#####
!#Transitive Verb Morphological sub-classes
!#####

!Original plan was to have transitives go through the same point
!as they were united in requiring prefixes in the independent order
!turns out that isn't true ...
!so this is obsolete
!as with VAI's much of this will probably be transferred to VERBS
!LEXICON TRANS_INDEP 
!+VTA+Indep:0        VTA_INDEP_THEME_GET ;
!+VTI+Indep:0        VTI_INDEP ;!name needs to be followed by morpheme slot

!#####
!#VTA Inflection
!#####


!#####
!#VTA Independent order Inflection
!#####
!Valentine (2001):274
!Insert schematic template here (also update style guide)


!prefix theme   negation    number  mode    periph
!                           inan    number  mode    periph

!see gt-norm-yamls/OJI_VTA_YAML_NOTES.txt for some discussion

!while theme signs are overwhelmingly object agreement,
!the local person theme signs are quite fused with number, subject ... and even negation
!which makes it so subject features are fairly unavoidable early on
!strangely, while the choice of theme sign in conjunction with the prefix tells you a huge amount
!about the subject and object, there is no dedicated location for subject features
!they are sprinkled around the verb and get their interpretation from the theme sign ultimately
!so treating the theme sign like it has subject features actually makes things really complicated,
!because you might have to be checking whether this was subject number or object number, even though they are the same morph
!   probably not true, what's wrong with +3Sub ... +3Pl?
!but you do need to introduce features that you wouldn't normally have to ...
!inan subjects are disambiguated from 3 subjects after the theme sign
!so if you are adding inan subject at the theme sign, you need to introduce a feature

!#####
!#Theme sign slot
!#####

LEXICON VTA_INDEP_THEME_GET 
@R.Person@      VTA_INDEP_THEME_GATEWAY ;
@D.Person.3@    VTA_INDEP_THEME_LOCAL_PASSIVE ; !derived VAIs (passives) 
@D.Person@    VTA_INDEP_NONLOCAL_PASSIVE ; !derived VAIs (passives) 
@R.Person.2@      VTA_INDEP_THEME_SECOND_PERSON ;
!style on new line for substantively different entries of sublexicon

!trying just giving a name for theme signs, and letting interpretation come later



LEXICON VTA_INDEP_THEME_GATEWAY
+ThmInv:igo  VTA_INDEP_THEME_INVERSE_SET ;
+ThmDir:aa   VTA_INDEP_THEME_DIRECT_GATEWAY ; !gateway usage unformalized now
!new tags

LEXICON VTA_INDEP_THEME_INVERSE_SET 
@P.Inverse.1@   VTA_INDEP_THEME_INVERSE_NEG ;
!new flag diacritic

!#Passives  {
!ROUTE THROUGH VAI
LEXICON VTA_INDEP_THEME_LOCAL_PASSIVE
+ThmPas:igoo       VAI_INDEP_NEG ;
!new tags

LEXICON VTA_INDEP_NONLOCAL_PASSIVE
+ThmPas:aa   VTA_INDEP_PASSIVE_FLAG ; 
!new tags

LEXICON VTA_INDEP_PASSIVE_FLAG
!needed for 3rd person passives to not pick up -m (+X VAI infl)
@P.Passive.1@ VAI_INDEP_NEG ; 
!}

!##Second persons {
!local preds
LEXICON VTA_INDEP_THEME_SECOND_PERSON 
+Thm2:i          VTA_INDEP_2V1_NEG ; !first person object
+Thm1Pl:igoo        VTA_INDEP_1PLV2_NEG ; !first person plural subject
+Thm1Sg:in        VTA_INDEP_1SGV2 ; !first person singular subject
+ThmNeg:isinoon  VTA_INDEP_1SGV2 ;!negated first person singular subject
!new tags

!####
!#negation through number {
!####
!#2 v 1 {
LEXICON VTA_INDEP_2V1_NEG 
+Neg:sii    VTA_INDEP_2V1_GATEWAY ;
            VTA_INDEP_2V1_GATEWAY ;

LEXICON VTA_INDEP_2V1_GATEWAY 
+21Pl:min  VTA_INDEP_LOCAL_PLURAL_PREMODE ;
+23Pl:mw   VTA_INDEP_LOCAL_PLURAL_PREMODE ;
            VTA_INDEP_LOCAL_SINGULAR_PREMODE ;
!}

!#1Pl v 2 {
LEXICON VTA_INDEP_1PLV2_NEG
+Neg:sii    VTA_INDEP_1PLV2_GATEWAY ;
            VTA_INDEP_1PLV2_GATEWAY ;

LEXICON VTA_INDEP_1PLV2_GATEWAY 
+23Pl:mw   VTA_INDEP_LOCAL_PLURAL_PREMODE ;
            VTA_INDEP_LOCAL_SINGULAR_PREMODE ;
!}

LEXICON VTA_INDEP_1SGV2 
+23Pl:inimw   VTA_INDEP_LOCAL_PLURAL_PREMODE ;
            VTA_INDEP_LOCAL_SINGULAR_PREMODE ;

!####
!#mode and such {
!####

LEXICON VTA_INDEP_LOCAL_PLURAL_PREMODE 
0:aa    VTA_INDEP_LOCAL_MODE ;
# ;

LEXICON VTA_INDEP_LOCAL_SINGULAR_PREMODE 
0:naa    VTA_INDEP_LOCAL_MODE ;
# ;

LEXICON VTA_INDEP_LOCAL_MODE 
+Prt:ban # ;
+Dub:dig # ;
!}
!}

!#####
!#Negation Slot
!#####

!direct negation {
LEXICON VTA_INDEP_THEME_DIRECT_GATEWAY !gateway usage unformalized now
!probably best to have a coherent mapping between graphviz branches, states, labels and lexc :)
!currently using quasi_semantic naming principles
+Neg:siwaa VTA_INDEP_THEME_DIRECT_PLURAL_NEGATION_GET ; 
+Neg:sii   VTA_INDEP_THEME_DIRECT_SINGULAR_NEGATION_GET ;
           VTA_INDEP_NUMBER_GET ;

!#Direct plural negation 
LEXICON VTA_INDEP_THEME_DIRECT_PLURAL_NEGATION_GET
@D.Person.3@    VTA_INDEP_NUMBER_IFULL ; !deviating from graphviz slightly (21, 1pl collapsed, D instead of R)
@R.Person.2@    VTA_INDEP_NUMBER_ILESS ;
@R.Person.3@    VTA_INDEP_NUMBER_3 ;

!#Direct singular negation 
LEXICON VTA_INDEP_THEME_DIRECT_SINGULAR_NEGATION_GET
@D.Person.3@    VTA_INDEP_NUMBER_1_2_SINGULAR_GATEWAY ; !deviating from graphviz slightly (21, 1pl collapsed, D instead of R)
@R.Person.3@    VTA_INDEP_3_GATEWAY ;
!tempting to send to VTA_INDEP_NUMBER_3, but we are out of phase
!there is a waa-reading state, and a gateway
!move into the gateway if read nothing
!gateway is the closest analog to I-less3 NoNum3
!what style recs do we make here?
!}

!#inverse negation, inverse no negation, direct no negation {
LEXICON VTA_INDEP_THEME_INVERSE_NEG 
+Neg:sii    VTA_INDEP_THEME_INVERSE_NEG_SET ; !convention for what to name setters after?
               VTA_INDEP_NUMBER_GET ;

LEXICON VTA_INDEP_THEME_INVERSE_NEG_SET
@P.Negation.1@  VTA_INDEP_NUMBER_GET ;
!new flag diacritic
!}

!######
!#Number Slot
!#####

!fed by inverse negation, inverse no negation, direct no negation
LEXICON VTA_INDEP_NUMBER_GET
@D.Person.3@    VTA_INDEP_NUMBER_LOCAL_GATEWAY ;
@R.Person.2@    VTA_INDEP_NUMBER_ILESS ;
@R.Person.3@    VTA_INDEP_NUMBER_3 ;!pick up waa
@R.Person.3@    VTA_INDEP_3_GATEWAY ;!pick up nothing
@R.Inverse@     VTA_INDEP_INAN_SUB;!own slot (maybe own file!), extra options for inverse-marked forms
!new flag

!#first person "I-full" plurality {
LEXICON VTA_INDEP_NUMBER_LOCAL_GATEWAY 
!what exactly is driving me to diverge from a strict mirroring of graphviz?
!feature style, and whether incoming arcs in graphviz read different strings
+21Pl:minaa    VTA_INDEP_MODE_GATEWAY ;
                VTA_INDEP_NUMBER_IFULL ;
                VTA_INDEP_NUMBER_1_2_SINGULAR_GATEWAY ;

!fed by VTA_INDEP_NUMBER_GET, direct plural negation
LEXICON VTA_INDEP_NUMBER_IFULL 
!style should include recommendations for marking when predication info is being collapsed
+21Pl:naan VTA_INDEP_IFULL_PERIPH_GET ;
!new tag
!}

!#second person "I-less" plurality {
LEXICON VTA_INDEP_NUMBER_ILESS
+23Pl:waa  VTA_INDEP_ILESS_GATEWAY ;
!new tag

LEXICON VTA_INDEP_ILESS_GATEWAY 
    VTA_INDEP_ILESS_PERIPH ;
    VTA_INDEP_MODE_GATEWAY ;
!}

!#first or second person singular
!fed by VTA_INDEP_NUMBER_GET, direct singular negation
LEXICON VTA_INDEP_NUMBER_1_2_SINGULAR_GATEWAY 
    VTA_INDEP_MODE_GATEWAY ; 
    VTA_INDEP_SINGULAR_PERIPH ; 

!#third person number {
!fed by VTA_INDEP_NUMBER_GET, direct plural negation
LEXICON VTA_INDEP_NUMBER_3
+23Pl:waa  VTA_INDEP_3_GATEWAY ;

!fed by VTA_INDEP_NUMBER_GET, direct singular negation
LEXICON VTA_INDEP_3_GATEWAY
    VTA_INDEP_MODE_GATEWAY ; 
    VTA_INDEP_3_PERIPH ;
!}

!probably a good idea to keep a list of the sub-lexicon calls out of a slot

!#####
!#Mode Slot
!#####

LEXICON VTA_INDEP_MODE_GATEWAY
+Dub:dig    VTA_INDEP_DUB_PERIPH_GET ;
+Prt:ban   VTA_INDEP_PRET_PERIPH_GET ;

!#####
!#Periph Slot
!#####

!#first person pl/inclusive naan {
LEXICON VTA_INDEP_IFULL_PERIPH_GET
@R.Inverse@ VTA_INDEP_IFULL_PERIPH_INAN ;
+3Pl:ig # ; !/ag/->[ig]/naan_
# ; !3rd person singular/obv

LEXICON VTA_INDEP_IFULL_PERIPH_INAN 
+0Pl:in # ; !/an/->[in]
!}

LEXICON VTA_INDEP_ILESS_PERIPH
+3Pl:g # ; !/ag/->[g]/VV_
# ; !3rd person singular/obv

LEXICON VTA_INDEP_SINGULAR_PERIPH
+3Pl:ag # ; !/ag/->[g]/VV_, some other allomorphy here
# ; !3rd person singular/obv
!careful! negation can't be last in word, n inserted then!

LEXICON VTA_INDEP_3_PERIPH
+3Obv:an # ; !surely plenty of allomorphy here

!#dubitative {
LEXICON VTA_INDEP_DUB_PERIPH_GET
@D.Inanimate@@D.Person.3@    VTA_INDEP_DUB_PERIPH_NON_3 ;
@D.Inanimate@@R.Person.3@    VTA_INDEP_DUB_PERIPH_3 ;
@D.Inanimate@@R.Inverse@     VTA_INDEP_DUB_PERIPH_INV ;!note, allowing ambiguity
@R.Inanimate@               VTA_INDEP_DUB_INAN ;

LEXICON VTA_INDEP_DUB_PERIPH_NON_3
+3Pl:enag # ;
# ;

LEXICON VTA_INDEP_DUB_PERIPH_3
+3Obv:enan # ;

LEXICON VTA_INDEP_DUB_PERIPH_INV
+0Pl:enan # ;

LEXICON VTA_INDEP_DUB_INAN 
+0Pl:enan # ;
#;
!}

!#preterit {
LEXICON VTA_INDEP_PRET_PERIPH_GET 
@D.Inanimate@@D.Person.3@    VTA_INDEP_PRET_PERIPH_NON_3 ;
@D.Inanimate@@R.Person.3@    VTA_INDEP_PRET_PERIPH_3 ;
@D.Inanimate@@R.Inverse@     VTA_INDEP_PRET_PERIPH_INV ;!note, allowing ambiguity
@R.Inanimate@               VTA_INDEP_PRET_INAN ;

LEXICON VTA_INDEP_PRET_PERIPH_NON_3
+3Pl:iig # ;
# ;

LEXICON VTA_INDEP_PRET_PERIPH_3 
+3Obv:iin # ;

LEXICON VTA_INDEP_PRET_PERIPH_INV 
+0Pl:iin # ;

LEXICON VTA_INDEP_PRET_INAN 
+0Pl:iin # ;
#;
!}

!#####
!#Inanimate Subjects {
!#careful! inverse forms with naan are ambiguous between inan sub and 3 sub!
!#they are not tracked into this area
!#####

LEXICON VTA_INDEP_INAN_SUB
+0Sub:n VTA_INDEP_INAN_SUB_SET ;

LEXICON VTA_INDEP_INAN_SUB_SET 
@P.Inanimate.1@ VTA_INDEP_INAN_SUB_GET ;

LEXICON VTA_INDEP_INAN_SUB_GET
@D.Person.1@    VTA_INDEP_INAN_SUB_ILESS_PL ;!should pl be specified here?
@R.Negation@@R.Person.3@ VTA_INDEP_INAN_SUB_OBV_NEG ;
@R.Person.3@    VTA_INDEP_INAN_SUB_OBV ;
                VTA_INDEP_INAN_SUB_SG_OBJ ;

!##Number
LEXICON VTA_INDEP_INAN_SUB_SG_OBJ 
0:aa    VTA_INDEP_MODE_GATEWAY;
+0Pl:an # ;
# ;

LEXICON VTA_INDEP_INAN_SUB_OBV_NEG 
+3Obv:ini   #;

LEXICON VTA_INDEP_INAN_SUB_OBV 
+3Obv:inaa VTA_INDEP_MODE_GATEWAY;

LEXICON VTA_INDEP_INAN_SUB_ILESS_PL
+23Pl:aawaa    VTA_INDEP_INAN_SUB_ILESS_PL_GATEWAY;

LEXICON VTA_INDEP_INAN_SUB_ILESS_PL_GATEWAY
+0Pl:an #;
    VTA_INDEP_MODE_GATEWAY;
#;

!}

!below there be dragons

!this used to be a generic place for transitives to be sorted
!now it is just for non-independent order VTA sorting
LEXICON VTA_NON_INDEP_GATEWAY 
# ;
!+VTA+Cnj:0        VTA_CNJ ; !name needs to be followed by morpheme slot
!+VTA+Imp:0       VTA_IMPER ; !name needs to be followed by morpheme slot
!+VTI+Cnj:0        VTI_CNJ ;!name needs to be followed by morpheme slot
!+VTI+Imp:0       VTI_IMPER ;!name needs to be followed by morpheme slot

LEXICON VTI_INDEP !name needs to be followed with a morpheme slot
# ;

