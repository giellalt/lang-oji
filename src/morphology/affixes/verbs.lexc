!todo: 
    !VII, VTI (all). 
    !VTA 
    !   number slot (inan sub, confirm all and only necessary features are checked/introduced)
    !   conjunct, imperative
    !   write up description of how theme-sign, number, peripheral slots are interacting
    !VAI fine tuning, de-nasalize conjunct order.

!! Verb inflection
!! ---------------
!! The UNDEFINED language verbs inflect in persons.

! generated template: person-number, number in lower case
! generated root.lexc: number-person, number in camel case
!generated assumes zero conversion?
!#:0   Nouns   ;

!#####
!#Bibliography info
!#####

!Not yet entered

!#####
!#Commence work
!#####

!Need to make sure features match between yaml and here

!does all verbal inflection need to be in this file, or can I split it up a bit?

!Continuation lexicon after PREFIXES is in ../stems/
!This almost certainly is going to be revised
!../stems/verbs.lexc will have internal divisions
!furthermore, why shouldn't person prefixes be common between nouns and verbs?

!#####
!#Prefixes
!#####

LEXICON V_PREFIXES
1+:ni   V_FIRST_PERSON_FLAG ;
2+:gi   V_SECOND_PERSON_FLAG ;
3+:o    V_THIRD_PERSON_FLAG ;
        VERBS ; 
!Add alignment recs to style

!style question: PERSON spelled out here and in flags
!but some sublexicon titles have PERS

LEXICON V_FIRST_PERSON_FLAG !add _FLAG to style
@P.Person.1@  VERBS ;

LEXICON V_SECOND_PERSON_FLAG 
@P.Person.2@  VERBS ;

LEXICON V_THIRD_PERSON_FLAG 
@P.Person.3@  VERBS ;

!#####
!#VAI Morphological sub-classes
!#####

!looking like gateway but not labeled as such, stems will have to be edited too

LEXICON VAI_ORDERS 
            VAI_INDEP_NEG ; !not specifying +Indep
@D.Person@    VAI_NON_INDEP ;

LEXICON VAI_NON_INDEP 
+Conj:0     VAI_CONJ_NEG ;
+Imper:0    VAI_IMPER ;

!#####
!#VAI Independent suffixes
!#####

!negative slot

LEXICON VAI_INDEP_NEG 
+Neg:sii    VAI_INDEP_PERSNUM_GATEWAY ;
            VAI_INDEP_PERSNUM_GATEWAY ;!intended ... no suffix, just go to persnum

!number slot
LEXICON VAI_INDEP_PERSNUM_GATEWAY 
!<"+"[1|2]Sg>       VAI_INDEP_MOOD ; !Good move? do we want to specify the interpretation of null morphs?
@R.Person.2@  VAI_INDEP_LOCALNUM ;
@R.Person.1@  VAI_INDEP_LOCALNUM ;
@D.Person@      VAI_INDEP_NONLOCAL ;

LEXICON VAI_INDEP_NONLOCAL 
+3:w        VAI_INDEP_THIRD_PERSON_FLAG ;
@D.Passive@ VAI_INDEP_X ;
!only one value of passive is possible (Dec 2015)

LEXICON VAI_INDEP_X
+X:m        VAI_INDEP_THIRD_PERSON_FLAG ;

LEXICON VAI_INDEP_THIRD_PERSON_FLAG 
@P.Person.3@  VAI_INDEP_MOOD ;

LEXICON VAI_INDEP_LOCALNUM !style on linearizing nested sublexica? does this count as a gateway?
<["+1Pl"|"+21"] .x. [m i n]>   VAI_INDEP_MOOD ; !Good move? do we want to specify a particular value or let the combination of prefix and suffix do the work?
@R.Person.2@          VAI_INDEP_LOCALNUM_2PL ;
            VAI_INDEP_MOOD ; !just go to mood, note that failure to pick up suffix in slot not managed in GATEWAY

LEXICON VAI_INDEP_LOCALNUM_2PL 
+2Pl:m   VAI_INDEP_MOOD ;!UR = mw (surfaces prevocalically)


!mood slot
LEXICON VAI_INDEP_MOOD 
+Pret:ban       VAI_INDEP_PERS_GATEWAY ;
+Dub:dig        VAI_INDEP_PERS_GATEWAY ; 
+Pret+Dub:goban VAI_INDEP_PERS_GATEWAY ;
                VAI_INDEP_PERS_GATEWAY ; !intended ... no suffix, just go to gateway

!non-local number slot
LEXICON VAI_INDEP_PERS_GATEWAY !add GATEWAY to style
@D.Person.3@  # ; !should ending be an option earlier? we currently have two sublexica that can be exited with epsilon transitions before this ending
@R.Person.3@  VAI_INDEP_NONLOCNUM ;

LEXICON VAI_INDEP_NONLOCNUM 
+3Obv:an    # ;
+3Pl:ag     # ;
            # ;

!#####
!#VAI Conjunct suffixes
!#####

!Conjunct order
!See Valentine  2001:222, 236-237
!assuming nasal final stems to avoid all hiatus repairs
!ibid 236-237 lacks nasal-final examples

!Insert schematic template here (also update style guide)

!negative slot
LEXICON VAI_CONJ_NEG 
+Neg:ziw        VAI_CONJ_PERSNUM ; !nas morph
!is this next legal? will it make incorrect zigwaawaad or ziwaad?
+Neg+3Pl:zigwaa VAI_CONJ_PERSNUM ; !nas morph, neg 3pl diff from pos 3pl
                VAI_CONJ_PERSNUM ;

!need to be able to adjust the [w]

!person and number slot
LEXICON VAI_CONJ_PERSNUM 
!adjustments for context needed once move past nas
+1Sg:aanh      VAI_CONJ_PRET ; 
+2Sg:in        VAI_CONJ_PRET ; 
+3Sg:g         VAI_CONJ_PRET ; !nas morph
+1Pl:aang      VAI_CONJ_PRET ;
+2Pl:ing       VAI_CONJ_PRET ;
+21:eg         VAI_CONJ_PRET ;
+3Pl:waad      VAI_CONJ_PRET ;
+3Obv:inid     VAI_CONJ_PRET ; !nas morph
+X:ang         VAI_CONJ_PRET ; !nas morph

!need to be able to end or move on ...
!doesn't seem right to delay decision to end until the next sublexicon

!preterite slot
LEXICON VAI_CONJ_PRET 
+Pret:ban   VAI_CONJ_DUB ;
            VAI_CONJ_DUB ;

!dubitative slot
LEXICON VAI_CONJ_DUB 
+Dub:en # ;
        # ;

!#####
!#VAI Imperative suffixes
!#####
!Insert schematic template here (also update style guide)

!just one slot under our analysis
LEXICON VAI_IMPER 
+Imm+2Sg:n       # ;
+Imm+2Pl:g       # ;
+Imm+21:daa      # ;
+Del+2Sg:kan     # ;
+Del+2Pl:kag     # ;
+Prob+2Sg:ken    # ;
+Prob+2Pl:kegon  # ;
+Prob+21:siidaa  # ;

!#####
!# VII Morphological sub-classes
!#####

!LEXICON VII_ORDERS 
!+Indep ;
!+Conj ;
!+Imper ;

!#####
!#Transitive Verb Morphological sub-classes
!#####

!Original plan was to have transitives go through the same point
!as they were united in requiring prefixes in the independent order
!turns out that isn't true ...
!so this is obsolete
!as with VAI's much of this will probably be transferred to VERBS
!LEXICON TRANS_INDEP 
!+VTA+Indep:0        VTA_INDEP_THEME_GATEWAY ;
!+VTI+Indep:0        VTI_INDEP ;!name needs to be followed by morpheme slot

!#####
!#VTA Inflection
!#####


!#####
!#VTA Independent order Inflection
!#####
!Valentine (2001):274
!Insert schematic template here (also update style guide)

LEXICON VTA_INDEP_THEME_GATEWAY 
@R.Person.2@  VTA_INDEP_THEME_SECOND_PERSON ;
@R.Person.1@  VTA_INDEP_THEME_FIRST_PERSON ;
@R.Person.3@  VTA_INDEP_THEME_THIRD_PERSON ;

@D.Person@    VTA_INDEP_NONLOCAL_PASSIVE ; !derived VAIs (passives) 
!style on new line for substantively different entries of sublexicon

!A chart of where you can find feature combinations:
!is 0 needed?
!Sub Feats:         1   2   3    3Obv   0   X
!Obj Feats:
!           1           1   2    2      2   2 
!           2       1       1    1      1   1
!           3       2   1        3      3   3 
!           3Obv    2   1   3           3   3

LEXICON VTA_INDEP_THEME_SECOND_PERSON !1
+2Sub+1Obj:i          VTA_INDEP_LOW_PERSON_1_FLAG ; !local direct
+1Sub+2Obj:ini        VTA_INDEP_LOW_PERSON_1_FLAG ; !local inverse
!long name here..., only case in theme sign where we have to track number
+1PlSub+2Obj:igoo        VTA_INDEP_LOW_PERSON_1_FLAG ; !local inverse
!multiple feature combinations use the non-local theme signs, so they get own sublex
<["+2Sub"["+3Obj"|"+3ObvObj"]] .x. [0]> VTA_INDEP_THEME_NONLOCAL_DIRECT ;
<[["+3Sub"|"+3ObvSub"]"+2Obj"] .x. [0]> VTA_INDEP_THEME_NONLOCAL_INVERSE ;
!obviatives behave just like 3sg when 1/2 are present...
+0Sub+2Obj:0        VTA_INDEP_LOW_PERSON_0_FLAG ; !non-local inverse

+XSub+2Obj:0         VTA_INDEP_LOCAL_PASSIVE ; !passive

LEXICON VTA_INDEP_THEME_FIRST_PERSON !2
<["+1Sub"["+3Obj"|"+3ObvObj"]] .x. [0]>        VTA_INDEP_THEME_NONLOCAL_DIRECT ; 
<[["+3Sub"|"+3ObvSub"]"+1Obj"] .x. [0]>    VTA_INDEP_THEME_NONLOCAL_INVERSE ;
+0Sub+1Obj:0         VTA_INDEP_LOW_PERSON_0_FLAG ; !non-local inverse
!obviatives behave just like 3sg when 1/2 are present...

+XSub+1Obj:0           VTA_INDEP_LOCAL_PASSIVE ;


LEXICON VTA_INDEP_THEME_THIRD_PERSON !3
+3Sub+3ObvObj:0       VTA_INDEP_THEME_NONLOCAL_DIRECT ; !non-local direct
+3ObvSub+3Obj:0      VTA_INDEP_THEME_NONLOCAL_INVERSE ;
<["+0Sub"["+3Obj"|"+3ObvObj"]] .x. [0]>     VTA_INDEP_LOW_PERSON_0_FLAG ;

LEXICON VTA_INDEP_LOW_PERSON_0_FLAG 
!setting here so that VTA_INDEP_LOW_PERSON_3_FLAG can avoid setting 0 to 3
@P.LowPerson.0@     VTA_INDEP_THEME_NONLOCAL_INVERSE ;
!style note NON_LOCAL vs NONLOCAL

LEXICON VTA_INDEP_THEME_NONLOCAL_DIRECT
0:aa    VTA_INDEP_LOW_PERSON_3_FLAG ;

LEXICON VTA_INDEP_THEME_NONLOCAL_INVERSE 
0:igo   VTA_INDEP_LOW_PERSON_3_FLAG ;

LEXICON VTA_INDEP_LOCAL_PASSIVE
0:igoo          VAI_INDEP_NEG ;

LEXICON VTA_INDEP_NONLOCAL_PASSIVE
+XSub+3Obj:aa   VTA_INDEP_PASSIVE_FLAG ; 
!allow +3ObvObj tag?
!<["+XSub"["+3Obj"|"+3ObvObj"]] .x. [a a]>          VAI_INDEP_NEG ; !passive

LEXICON VTA_INDEP_PASSIVE_FLAG
!needed for 3rd person passives to not pick up -m (+X VAI infl)
@P.Passive.1@ VAI_INDEP_NEG ; 

LEXICON VTA_INDEP_LOW_PERSON_1_FLAG 
@P.LowPerson.1@     VTA_INDEP_NEG ;

LEXICON VTA_INDEP_LOW_PERSON_3_FLAG !slightly gateway ish
!general 3rd person setting must avoid setting 0 to 3
@D.LowPerson.0@@P.LowPerson.3@     VTA_INDEP_NEG ;
@R.LowPerson.0@                     VTA_INDEP_NEG ;

!negative morpheme  consistent across VAI, VTA, etc, but making it common would require a lot of flags

LEXICON VTA_INDEP_NEG 
+Neg:sii        VTA_INDEP_PERSNUM_GATEWAY ;
@R.LowPerson.0@   VTA_INDEP_INAN_SUB ;
@D.LowPerson.0@     VTA_INDEP_PERSNUM_GATEWAY ;

!Persnum slot is underdetermined in text discussion on Valentine 2001:274
!see  gt-norm-yamls/OJI_VTA_YAML_NOTES.txt

!here's how the person number slot works:
!if 2 prefix and 1 argument: 
!   if 1Pl obj: -min 
!   elif 2Pl arg: -m
!   elif (sg v sg) or (2sg vs 1Pl): 0
!   else: impossible
!elif 2 prefix or 1 prefix:
!   if 1Sg arg or 2sg arg: 0 (small exception for inanimate subs)


!this needs to get swept up in the general person-number reformation
LEXICON VTA_INDEP_INAN_SUB 
+0Sub:n     VTA_INDEP_PERSNUM_GATEWAY ;
!need to adjust n-n sequences with n-naan
!-> no, it only occurs with singular objects :)

LEXICON VTA_INDEP_PERSNUM_GATEWAY 
!precise distribution fairly complex (Valentine (2001):274)
@R.Person.2@   VTA_INDEP_PERSNUM_2 ;
@R.Person.2@    VTA_INDEP_PERSNUM_2 ;

@R.Person.1@    VTA_INDEP_PERSNUM_1 ;
!@R.Person.1@@R.LowPerson.0@   VTA_INDEP_PERSNUM_1X0 ;

@R.Person.3@                  VTA_INDEP_PERSNUM_3 ;
!optionality handled in daughters instead of in gateway

LEXICON VTA_INDEP_PERSNUM_2
@R.LowPerson.1@ VTA_INDEP_PERSNUM_2X1 ;
@R.LowPerson.3@ VTA_INDEP_PERSNUM_2X3 ;
@R.LowPerson.0@ VTA_INDEP_PERSNUM_2X0 ;

LEXICON VTA_INDEP_PERSNUM_2X1 
!one could discuss ways to implement disjunctive blocks
!currently must specify complete distro
!for instance, there is a general 2Pl marker -m, which is overridden by 1Pl obj -min
<[["+2Pl" "+1Sg"]|[["+1Sg"|"+1Pl"]"+2Pl"]] .x. [m]>      VTA_INDEP_MOOD ; 
<[["+2Pl"|"+2Sg"]"+1Pl"] .x. [m i n]>   VTA_INDEP_MOOD ;
!most feature combinations with locals are impossible
!others simply get no marking
!only allowing those that get no marking to continue
<[[["+1Sg"|"+1Pl"]"+2Sg"]|["+2Sg" "+1Sg"]] .x. [0]> VTA_INDEP_MOOD ;
!seems odd that you can't say "you talk to you guys", like in setting up groups"

LEXICON VTA_INDEP_PERSNUM_2X3 
!strongly favor all caps in features...with CamelCase errors are too easy to make and miss
<[["+3Sg"|"+3Obv"|"+3Pl"]"+21"] .x. [0]>   VTA_INDEP_PERSNUM_IFULL ;
<["+21"["+3Sg"|"+3Obv"|"+3Pl"]] .x. [0]>   VTA_INDEP_PERSNUM_IFULL ;
<[["+3Sg"|"+3Obv"|"+3Pl"]"+2Pl"] .x. [0]>   VTA_INDEP_PERSNUM_ILESS ;
<["+2Pl"["+3Sg"|"+3Obv"|"+3Pl"]] .x. [0]>   VTA_INDEP_PERSNUM_ILESS ;
!violating general principle of letting 0 go unspecified
!because in this slot we must distinguish between impossible and unmarked
!in this case nothing is impossible
<[["+2Sg"["+3Sg"|"+3Obv"|"+3Pl"]]|[["+3Sg"|"+3Obv"|"+3Pl"|"+0Sg"|"+0Pl"]"+2Sg"]] .x. [0]>   VTA_INDEP_MOOD ;

LEXICON VTA_INDEP_PERSNUM_2X0
<[["+0Sg"|"+0Pl"]"+2Pl"] .x. [0]> VTA_INDEP_PERSNUM_INAN_ILESS ;
<[["+0Sg"|"+0Pl"]"+21"] .x. [0]>   VTA_INDEP_PERSNUM_IFULL ;
!non-marking approach differs between 2nd persons and first persons... :(
                        VTA_INDEP_MOOD ;

LEXICON VTA_INDEP_PERSNUM_1
!it wasn't really necessary to specify lower person when first persons appear
!... wait till whole shebang is done before modifying though
!the different categories of 3 and 0 don't matter here
!not sure if we want to track 0 vs 3 here
<[["+1Sg"["+3Sg"|"+3Obv"|"+3Pl"]]|["+3Sg"|"+3Obv"|"+3Pl"|"+0Sg"|"+0Pl"]"+1Sg"] .x. [0]> VTA_INDEP_MOOD ;
<[["+1Pl"["+3Sg"|"+3Obv"|"+3Pl"]]|["+3Sg"|"+3Obv"|"+3Pl"|"+0Sg"|"+0Pl"]"+1Pl"] .x. [0]> VTA_INDEP_PERSNUM_IFULL ;
!@R.LowPerson.3@ VTA_INDEP_PERSNUM_1X3 ;

LEXICON VTA_INDEP_PERSNUM_3 
!might be good to assign an obviation feature here
!running the risk of allowing a direct theme sign with inverse arg config (and vice versa)
!maybe need to ensure that lowerperson is checked? (probably not...)
!it seems to be only important for 2nd person ... and not even all persons then ...
<[["+3Pl" "+3Obv"]|["+3Obv" "+3Pl"]] .x. [0]>  VTA_INDEP_PERSNUM_ILESS ;
<[["+0Pl"|"+0Sg"]"+3Pl"] .x. [0]>   VTA_INDEP_PERSNUM_INAN_ILESS ;
 !plural on singular and singular on plural are impossible
 <[["+3Sg" "+3Obv"]|["+3Obv" "+3Sg"]] .x. [0]>               VTA_INDEP_MOOD ;

LEXICON VTA_INDEP_PERSNUM_INAN_ILESS
0:naawaa  VTA_INDEP_MOOD ;

LEXICON VTA_INDEP_PERSNUM_IFULL
0:naan  VTA_INDEP_MOOD ;

LEXICON VTA_INDEP_PERSNUM_ILESS
0:waa   VTA_INDEP_MOOD ;

LEXICON VTA_INDEP_MOOD 
+Pret:ban   VTA_INDEP_PERS_GATEWAY ;
+Dub:dig    VTA_INDEP_PERS_GATEWAY ;!Odawa
+Dub:dog    VTA_INDEP_PERS_GATEWAY ;!Ojibwe
            VTA_INDEP_PERS_GATEWAY ;  

LEXICON VTA_INDEP_PERS_GATEWAY !add GATEWAY to style
!Might need to be revised
@D.Person.3@ # ; !should ending be an option earlier? -> no, best to wait till nothing can possibly follow.
@R.Person.3@ VTA_INDEP_NONLOCNUM ;

LEXICON VTA_INDEP_NONLOCNUM 
!precise distribution fairly complex (Valentine (2001):274)
!this will want an obviation feature from earlier
+3Obv:an    # ;
+3Pl:ag     # ;

!this used to be a generic place for transitives to be sorted
!now it is just for non-independent order VTA sorting
LEXICON VTA_NON_INDEP_GATEWAY 
# ;
!+VTA+Conj:0        VTA_CONJ ; !name needs to be followed by morpheme slot
!+VTA+Imper:0       VTA_IMPER ; !name needs to be followed by morpheme slot
!+VTI+Conj:0        VTI_CONJ ;!name needs to be followed by morpheme slot
!+VTI+Imper:0       VTI_IMPER ;!name needs to be followed by morpheme slot

LEXICON VTI_INDEP !name needs to be followed with a morpheme slot
# ;

