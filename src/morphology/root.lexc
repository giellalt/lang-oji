! Divvun & Giellatekno - open source grammars for Ojibwe language
! Copyright © 2015 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

! ========================================================================== !
!!            !!!Ojibwe morphological analyser                      !
! ========================================================================== !
!! INTRODUCTION TO MORPHOLOGICAL ANALYSER OF Ojibwe LANGUAGE.
 
!todo: make sure LowPerson.X is not an option
Multichar_Symbols  !!≈ !!!Definitions for @CODE@

!####
!#Abstract features (not associated with a particular morpheme)
!####

!Verb Major Class
+V
+VAI +VII +VTI +VTA ! could be V+II etc.

!Verb Order
+Cnj +Imp ! (Ind for abstract mode only?)

!####
!#Concrete features (associated with a particular morpheme)
!####

!Simple Person
1+ 2+ 3+ X+   !prefixes, last is only used on nouns
+1 +2 +3 +X       !suffixes, if used, occur in Local Person Number slot
+%0          !not really a person, but inanimates sometimes trigger special agreement

!! Verb Negation
+Neg ! ( abs: +Pos / +Aff )
!opposed by +Pos in "analysis" mode, but +Pos plays no role in core transducer

!! Local Person Number

!simplest theory of person/number tags is probably:
!3 person tags:
    !1, 2, 3
        !n.b. 0 is used to mark inanimate agreement
        !but it isn't really a person
        !though agr for 0 pl competes in num2 slot!
!2-4 number tags:
    !pl, (sg) (permitted with all numbers)
        !can drop sg, since no affix
    !(in) (restrict to 2 prefix, interp 1.incl)
        !can drop in, person tag can pick up slack
        !see analysis space below
    !ob (restrict to 3 prefix (verbs), = obv)
!total of 5-7 tags :)
!when recognizing forms...
!will it be necessary to have 3+...+3+pl
!or can 3+...+pl work?
    !depends on how many plurals can follow prefix
    !1st person prefix can have 1 flavor:
        !in this case you don't need two 1's
        !obviously wouldn't hurt to include it
            !1+...+Pl (=+21Pl above)
    !2nd person prefix can have 2 flavors:
        !one which may also follow 1
            !2+...+1+Pl (=+21Pl above)
        !one which may also follow 3
            !2+...+2+Pl (=+23Pl above)
    !3rd person prefix can have 1 flavor:
        !in this case you don't need two 3's
        !obviously wouldn't hurt to include it
            !3+...+Pl (=+23Pl above)
                !this pl *must* be followed by obv
                !obv suff is required after 3 pre
                !unless inan agr occurs :)
        !the other 3pl only comes after 1/2 prefixes
!analysis space (including redundant specs):
    !pre    num1      num2
    !1.....(1 pl).....(3 pl) = 1sg/pl & 3sg/pl
    !2.....([1|2] pl).(3 pl) = 2sg/pl/1.inc & 3sg/pl
        !small wrinkle: VAI num1 slot ...
    !3.....(2 pl).....(3 ob) = 3sg/pl & 3ob
        !modulo inanimate agr
        !careful with inanimate pl agr in num2
    !one more wrinkle 1 v 2/2 v 1:
    !2.....([2|1] pl)        = 2sg/pl & 1sg/pl
        !1.inc is illegal here
        !extra: number also appears in some theme sign
!if you like things minimal:
    !pre    num1      num2
    !1.....(pl).......(pl) = 1sg/pl & 3sg/pl
    !2.....([1|2] pl).(pl) = 2sg/pl/1.inc & 3sg/pl
    !3.....(pl).......(ob) = 3sg/pl & 3ob

!DEPRECATED (conjunct order, imperative order might require)
!could do +1+21Pl, +2+21Pl, +2+23Pl
!+1Pl +21 +2Pl

!instantiating simple number theory
!recommend all composite person number tags be dropped
!first ensure affixes/*.lexc, yaml scripts are up to date
!Pretty sure these are duplicated elsewhere in this doc
+Pl +4

!Mood
+Prt +Dub ! abs: Prt, Neu
+Voc  !only nouns, though form is quite like dub

!Non-Local Person Number/Obviation
!+3Obv +3Pl  ! verbs 4? (no 5) Does one indicate ambiguity explicitly or not: 4Sg/Pl?
!+0Sg +0Pl   ! verbs
+Loc !Nouns (other periph suffs (Pl, Obv) immediately above)

!VTA features (used in deciding theme sign)
+ThmDir  !aa        (3rd obj) 
+Thm2    !i         (1st obj, 2 sub) 
+Thm1Pl  !igoo      (2nd obj, 1.pl sub) 
+Thm1Sg  !in        (2nd obj, 1.sg sub) 
+ThmNeg  !isinoon   (2nd obj, 1.sg sub, neg)
+ThmInv  !igo       (pre=obj, 0/3 sub) 
+ThmPas  !igoo, aa  (passive)

!DEPRECATED!
!+2Sub +2Obj
!+1Sub +1Obj +1PlSub !this last is only used twice!!
!+3Sub +3Obj +3ObvSub +3ObvObj
!+0Sub
!+XSub

!Noun tags
+N
+NA +NI +NAD +NID 
+Con 
+Dim 
+Pej
!Possessive theme (plays no role in analysis mode)
+ThmPos
!##Conjunct order tags

!Verb Other Person/Number combinations (conjunct order crosses person with number)
!+1Sg +2Sg +3Sg

! VAI, VTI, VTA: 1Sg, 2Sg, 3Sg, 1Pl denotes Subject, add O for objects

! Leipzig marking 3rd person participants: VII, VAI: 3SS, VTI: 3SA, VTA: 3SA, 3SP  

!! Imperative order tags
+Imm 
+Del 
+Proh 

!! Punctuation

+CLB    !!= * @CODE@ = punctuation tag
+PUNCT  !!= * @CODE@ = punctuation tag
+LEFT   !!= * @CODE@ = punctuation tag
+RIGHT  !!= * @CODE@ = punctuation tag


!####
!#Person Flags (person indicated by prefixes)
!####

!## setting flags
!X needed?
@P.Person.1@
@P.Person.2@
@P.Person.3@
@P.Person.X@

!## checking flags
@D.Person.1@
@D.Person.2@
@D.Person.3@
@D.Person.X@
@D.Person@

@R.Person.1@
@R.Person.2@
@R.Person.3@
@R.Person.X@
@R.Person@

!####
!#DEPRECATED Low Person Flags (person in VTA that isn't indexed on prefix)
!####

!## setting flags
!@P.LowPerson.1@
!@P.LowPerson.3@
!@P.LowPerson.X@
!@P.LowPerson.0@
!
!!## checking flags
!@D.LowPerson.1@
!@D.LowPerson.3@
!@D.LowPerson.X@
!@D.LowPerson.0@
!@D.LowPerson@
!
!@R.LowPerson.1@
!@R.LowPerson.3@
!@R.LowPerson.X@
!@R.LowPerson.0@
!@R.LowPerson@

!####
!#Animacy flags (animacy is inherent to nouns)
!####

!## setting flags
@P.Animate.%0@
@P.Animate.1@

!## checking flags
@D.Animate.%0@
@D.Animate.1@
@D.Animate@

@R.Animate.%0@
@R.Animate.1@
@R.Animate@
!style on default flag options to include

!####
!#Passive Flag (3rd person passives must be marked as such to avoid permitting +X marking)
!####

!## setting flags
@P.Passive.1@

!## checking flags
!permitting full D and trimmed D ... style?
@D.Passive.1@
@D.Passive@

@R.Passive.1@
@R.Passive@

!####
!#inverse flag
!####
!set
@P.Inverse.1@

!get
@D.Inverse.1@
@D.Inverse@

@R.Inverse.1@
@R.Inverse@

!####
!#Negation flag
!####

!set
@P.Negation.1@

!get
@D.Negation@
@D.Negation.1@
@R.Negation@
@R.Negation.1@

!####
!#Inanimate flag (verbs (VTA!) with inanimate subjects)
!####

!set
@P.Inanimate.1@

!get
@D.Inanimate.1@
@D.Inanimate@

@R.Inanimate.1@
@R.Inanimate@

LEXICON Root !!= @CODE@ points to the other lexica
! Note that whenever a new part of speech, and a new file (like propernouns, etc.)
! is added, it must be specified in the src/morphology/Makefile.am
    V_PREFIXES ;
    N_PREFIXES ;
!    Punctuation ;

