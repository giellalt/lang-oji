!todo:  +4 -> Obv
!       Singular number peripheral suffix
!       3rd person possession
!       unspecified possession
!       vaporize possessed theme suffix's tag
!       inserting POS as separate from pos-animacy tag
!       make sure noun rules only apply in nouns!

!###
!#Moving possessor features to end
!###
!NB: extended prefix tags (+Px1Pl) are not in root.lexc, problem?

!intended: write +Px1Pl at end of string if string starts with 1+.*+1+Pl
define Px1Pl [ [..] -> %+Px1Pl || 1%+ ?* %+1 %+Pl ?* _ .#. ] ; !could specify leading .#. in envi, but this shouldn't be necessary (1+ is by definition string initial)
define Px1Sg [ [..] -> %+Px1Sg || 1%+ ?* _ .#. ] ; !this rule needs to be ordered after +1+Pl is cleaned out

define Px2Pl [ [..] -> %+Px2Pl || 2%+ ?* %+3 %+Pl ?* _ .#. ] ; 
define Px21Pl [ [..] -> %+Px21Pl || 2%+ ?* %+1 %+Pl ?* _ .#. ] ; 
define Px2Sg  [ [..] -> %+Px2Sg || 2%+ ?* _ .#. ] ; 

!###
!#Cleaning (deleting) possessor features
!###

! Save test cases like this in test.csv
! 1+xxxx+1Plyyyy
! 1+xxxx
! 2+xxxx+3+Plyyyy
! 2+xxxx+1+Plyyyy
! Test with
! cat test.csv | lookup -flags mbTT test.fsm

!intended: delete the triggering information 
!it would be nice to have sub-rules like delete "1+", delete "+Pl"
!then they could be combined into bigger rules and deployed when envi is met
!otherwise the same changes get written out several times, varying only in envi

define Px1Plc1 [ 1%+ -> 0 || _ ?* %+1 %+Pl ] ; 
!intended: delete  +1+Pl seqs, but only if they are not preceded by 2+
define Px1Plc2 [ %+1 %+Pl -> 0 || ~[ 2%+ ] ?* _  ] ; 
!would be nice if we could have just one rule that zapped 1+ ... +1+Pl when they occurred together
!here's an attempt: (https://code.google.com/archive/p/foma/wikis/RegularExpressionReference.wiki)
define Px1Plc [  1%+ ?* %+1 %+Pl -> 0 ] ; !but I'm not sure that it will only delete them when they occur together 

define Px1Sgc [ 1%+ -> 0 ||  _ ] ; 

define Px2Plc1 [ 2%+ -> 0 || _ ?* %+3 %+Pl ] ; 
define Px2Plc2 [ %+3 %+Pl -> 0 || ~[ 3%+ ] ?* _  ] ; 

define Px21Plc1 [ 2%+ -> 0 || _ ?* %+1 %+Pl ] ; 
define Px21Plc2 [ %+1 %+Pl -> 0 || ~[ 1%+ ] ?* _  ] ; 

define Px2Sgc [ 2%+ -> 0 ||  _ ] ; 
!###
!#Putting it together
!###



read regex [ 
    !rule to add +Sg tag to be added here
    !(need to apply before possessor tags target end of string)
    !##possessor tags
    !#first person
    Px1Pl .o. !move
    Px1Plc1 .o. !clean
    Px1Plc2 .o. 
    Px1Sg .o. !repeat for unmarked
    Px1Sgc .o.
    !#second person
    Px2Pl .o. !move
    Px2Plc1 .o. !clean
    Px2Plc2 .o. 
    Px21Pl .o. !repeat
    Px21Plc1 .o. 
    Px21Plc2 .o. 
    Px2Sg .o. !repeat for unmarked
    Px2Sgc 
    ] ;

save stack oji-gloss-2-alberta-normal.fsm
invert net
save stack test.fsm


